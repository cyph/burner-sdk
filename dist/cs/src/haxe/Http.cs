// Generated by Haxe 3.4.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class Http : global::haxe.lang.HxObject {
		
		static Http() {
			global::haxe.Http.PROXY = null;
		}
		
		
		public Http(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Http(string url) {
			global::haxe.Http.__hx_ctor_haxe_Http(this, url);
		}
		
		
		public static void __hx_ctor_haxe_Http(global::haxe.Http __hx_this, string url) {
			unchecked {
				__hx_this.onStatus = ( (( global::haxe.Http___hx_ctor_haxe_Http_813__Fun.__hx_current != null )) ? (global::haxe.Http___hx_ctor_haxe_Http_813__Fun.__hx_current) : (global::haxe.Http___hx_ctor_haxe_Http_813__Fun.__hx_current = ((global::haxe.Http___hx_ctor_haxe_Http_813__Fun) (new global::haxe.Http___hx_ctor_haxe_Http_813__Fun()) )) );
				__hx_this.onError = ( (( global::haxe.Http___hx_ctor_haxe_Http_803__Fun.__hx_current != null )) ? (global::haxe.Http___hx_ctor_haxe_Http_803__Fun.__hx_current) : (global::haxe.Http___hx_ctor_haxe_Http_803__Fun.__hx_current = ((global::haxe.Http___hx_ctor_haxe_Http_803__Fun) (new global::haxe.Http___hx_ctor_haxe_Http_803__Fun()) )) );
				__hx_this.onData = ( (( global::haxe.Http___hx_ctor_haxe_Http_793__Fun.__hx_current != null )) ? (global::haxe.Http___hx_ctor_haxe_Http_793__Fun.__hx_current) : (global::haxe.Http___hx_ctor_haxe_Http_793__Fun.__hx_current = ((global::haxe.Http___hx_ctor_haxe_Http_793__Fun) (new global::haxe.Http___hx_ctor_haxe_Http_793__Fun()) )) );
				__hx_this.url = url;
				__hx_this.headers = new global::List<object>();
				__hx_this.@params = new global::List<object>();
				__hx_this.cnxTimeout = ((double) (10) );
			}
		}
		
		
		public static object PROXY;
		
		public string url;
		
		public string responseData;
		
		public bool noShutdown;
		
		public double cnxTimeout;
		
		public global::haxe.ds.StringMap<object> responseHeaders;
		
		public global::haxe.lang.Null<int> chunk_size;
		
		public global::haxe.io.Bytes chunk_buf;
		
		public object file;
		
		public string postData;
		
		public global::List<object> headers;
		
		public global::List<object> @params;
		
		public virtual global::haxe.Http setHeader(string header, string @value) {
			this.headers = global::Lambda.filter<object>(((object) (this.headers) ), ((global::haxe.lang.Function) (new global::haxe.Http_setHeader_103__Fun(header)) ));
			this.headers.push(new global::haxe.lang.DynamicObject(new int[]{834174833, 2097154445}, new object[]{@value, header}, new int[]{}, new double[]{}));
			return this;
		}
		
		
		public virtual global::haxe.Http setParameter(string param, string @value) {
			this.@params = global::Lambda.filter<object>(((object) (this.@params) ), ((global::haxe.lang.Function) (new global::haxe.Http_setParameter_121__Fun(param)) ));
			this.@params.push(new global::haxe.lang.DynamicObject(new int[]{834174833, 1029013645}, new object[]{@value, param}, new int[]{}, new double[]{}));
			return this;
		}
		
		
		public virtual void request(global::haxe.lang.Null<bool> post) {
			global::haxe.Http _gthis = this;
			global::haxe.Http me = this;
			global::haxe.Http me1 = this;
			global::haxe.io.BytesOutput output = new global::haxe.io.BytesOutput();
			global::haxe.lang.Function old = this.onError;
			bool[] err = new bool[]{false};
			this.onError = new global::haxe.Http_request_390__Fun(output, old, me1, err, _gthis);
			this.customRequest((post).@value, output, null, null);
			if ( ! (err[0]) ) {
				me1.onData.__hx_invoke1_o(default(double), me1.responseData = output.getBytes().toString());
			}
			
		}
		
		
		public virtual void customRequest(bool post, global::haxe.io.Output api, global::sys.net.Socket sock, string method) {
			unchecked {
				this.responseData = null;
				global::EReg url_regexp = new global::EReg("^(https?://)?([a-zA-Z\\.0-9_-]+)(:[0-9]+)?(.*)$", "");
				if ( ! (url_regexp.match(this.url)) ) {
					this.onError.__hx_invoke1_o(default(double), "Invalid URL");
					return;
				}
				
				bool secure = string.Equals(url_regexp.matched(1), "https://");
				if (( sock == null )) {
					if (secure) {
						throw global::haxe.lang.HaxeException.wrap("Https is only supported with -lib hxssl");
					}
					else {
						sock = new global::sys.net.Socket();
					}
					
				}
				
				string host = url_regexp.matched(2);
				string portString = url_regexp.matched(3);
				string request = url_regexp.matched(4);
				if (string.Equals(request, "")) {
					request = "/";
				}
				
				global::haxe.lang.Null<int> port = ( (( string.Equals(portString, null) || string.Equals(portString, "") )) ? (new global::haxe.lang.Null<int>(( (secure) ? (443) : (80) ), true)) : (global::Std.parseInt(global::haxe.lang.StringExt.substr(portString, 1, new global::haxe.lang.Null<int>(( portString.Length - 1 ), true)))) );
				object data = null;
				bool multipart = ( this.file != null );
				string boundary = null;
				string uri = null;
				if (multipart) {
					post = true;
					boundary = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::Std.@string(global::Std.random(1000)), global::Std.@string(global::Std.random(1000))), global::Std.@string(global::Std.random(1000))), global::Std.@string(global::Std.random(1000)));
					while (( boundary.Length < 38 )) {
						boundary = global::haxe.lang.Runtime.concat("-", boundary);
					}
					
					global::System.Text.StringBuilder b_b = new global::System.Text.StringBuilder();
					{
						global::_List.ListNode<object> _g_head = this.@params.h;
						while (( _g_head != null )) {
							object val = _g_head.item;
							_g_head = _g_head.next;
							object p = ((object) (val) );
							b_b.Append(((string) ("--") ));
							b_b.Append(((string) (global::Std.@string(boundary)) ));
							b_b.Append(((string) ("\r\n") ));
							b_b.Append(((string) ("Content-Disposition: form-data; name=\"") ));
							b_b.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(p, "param", 1029013645, true)))) ));
							b_b.Append(((string) ("\"") ));
							b_b.Append(((string) ("\r\n") ));
							b_b.Append(((string) ("\r\n") ));
							b_b.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(p, "value", 834174833, true)))) ));
							b_b.Append(((string) ("\r\n") ));
						}
						
					}
					
					b_b.Append(((string) ("--") ));
					b_b.Append(((string) (global::Std.@string(boundary)) ));
					b_b.Append(((string) ("\r\n") ));
					b_b.Append(((string) ("Content-Disposition: form-data; name=\"") ));
					b_b.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(this.file, "param", 1029013645, true)))) ));
					b_b.Append(((string) ("\"; filename=\"") ));
					b_b.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(this.file, "filename", 2003447495, true)))) ));
					b_b.Append(((string) ("\"") ));
					b_b.Append(((string) ("\r\n") ));
					b_b.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("Content-Type: ", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(this.file, "mimeType", 1560893070, true))), "\r\n"), "\r\n"))) ));
					uri = b_b.ToString();
				}
				else {
					global::_List.ListNode<object> _g_head1 = this.@params.h;
					while (( _g_head1 != null )) {
						object val1 = _g_head1.item;
						_g_head1 = _g_head1.next;
						object p1 = ((object) (val1) );
						if (string.Equals(uri, null)) {
							uri = "";
						}
						else {
							uri = global::haxe.lang.Runtime.concat(uri, "&");
						}
						
						uri = global::haxe.lang.Runtime.concat(uri, global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::System.Uri.EscapeDataString(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(p1, "param", 1029013645, true))), "="), global::System.Uri.EscapeDataString(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(p1, "value", 834174833, true)))));
					}
					
				}
				
				global::System.Text.StringBuilder b_b1 = new global::System.Text.StringBuilder();
				if ( ! (string.Equals(method, null)) ) {
					b_b1.Append(((string) (global::Std.@string(method)) ));
					b_b1.Append(((string) (" ") ));
				}
				else if (post) {
					b_b1.Append(((string) ("POST ") ));
				}
				else {
					b_b1.Append(((string) ("GET ") ));
				}
				
				if (( global::haxe.Http.PROXY != null )) {
					b_b1.Append(((string) ("http://") ));
					b_b1.Append(((string) (global::Std.@string(host)) ));
					if (( ! (global::haxe.lang.Runtime.eq((port).toDynamic(), 80)) )) {
						b_b1.Append(((string) (":") ));
						b_b1.Append(((string) (global::Std.@string((port).toDynamic())) ));
					}
					
				}
				
				b_b1.Append(((string) (global::Std.@string(request)) ));
				if ((  ! (post)  &&  ! (string.Equals(uri, null))  )) {
					if (( global::haxe.lang.StringExt.indexOf(request, "?", new global::haxe.lang.Null<int>(0, true)) >= 0 )) {
						b_b1.Append(((string) ("&") ));
					}
					else {
						b_b1.Append(((string) ("?") ));
					}
					
					b_b1.Append(((string) (global::Std.@string(uri)) ));
				}
				
				b_b1.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" HTTP/1.1\r\nHost: ", host), "\r\n"))) ));
				if ( ! (string.Equals(this.postData, null)) ) {
					b_b1.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("Content-Length: ", global::haxe.lang.Runtime.toString(this.postData.Length)), "\r\n"))) ));
				}
				else if (( post &&  ! (string.Equals(uri, null))  )) {
					if (( multipart ||  ! (global::Lambda.exists<object>(((object) (this.headers) ), ((global::haxe.lang.Function) (( (( global::haxe.Http_customRequest_527__Fun.__hx_current != null )) ? (global::haxe.Http_customRequest_527__Fun.__hx_current) : (global::haxe.Http_customRequest_527__Fun.__hx_current = ((global::haxe.Http_customRequest_527__Fun) (new global::haxe.Http_customRequest_527__Fun()) )) )) )))  )) {
						b_b1.Append(((string) ("Content-Type: ") ));
						if (multipart) {
							b_b1.Append(((string) ("multipart/form-data") ));
							b_b1.Append(((string) ("; boundary=") ));
							b_b1.Append(((string) (global::Std.@string(boundary)) ));
						}
						else {
							b_b1.Append(((string) ("application/x-www-form-urlencoded") ));
						}
						
						b_b1.Append(((string) ("\r\n") ));
					}
					
					if (multipart) {
						b_b1.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("Content-Length: ", global::haxe.lang.Runtime.toString((( ( ( uri.Length + ((int) (global::haxe.lang.Runtime.getField_f(this.file, "size", 1280549057, true)) ) ) + boundary.Length ) + 6 )))), "\r\n"))) ));
					}
					else {
						b_b1.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("Content-Length: ", global::haxe.lang.Runtime.toString(uri.Length)), "\r\n"))) ));
					}
					
				}
				
				b_b1.Append(((string) ("Connection: close\r\n") ));
				{
					global::_List.ListNode<object> _g_head2 = this.headers.h;
					while (( _g_head2 != null )) {
						object val2 = _g_head2.item;
						_g_head2 = _g_head2.next;
						object h1 = ((object) (val2) );
						b_b1.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(h1, "header", 2097154445, true)))) ));
						b_b1.Append(((string) (": ") ));
						b_b1.Append(((string) (global::Std.@string(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(h1, "value", 834174833, true)))) ));
						b_b1.Append(((string) ("\r\n") ));
					}
					
				}
				
				b_b1.Append(((string) ("\r\n") ));
				if ( ! (string.Equals(this.postData, null)) ) {
					b_b1.Append(((string) (global::Std.@string(this.postData)) ));
				}
				else if (( post &&  ! (string.Equals(uri, null))  )) {
					b_b1.Append(((string) (global::Std.@string(uri)) ));
				}
				
				try {
					if (( global::haxe.Http.PROXY != null )) {
						sock.connect(new global::sys.net.Host(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(global::haxe.Http.PROXY, "host", 1158860648, true))), ((int) (global::haxe.lang.Runtime.getField_f(global::haxe.Http.PROXY, "port", 1247576961, true)) ));
					}
					else {
						sock.connect(new global::sys.net.Host(((string) (host) )), (port).@value);
					}
					
					sock.write(b_b1.ToString());
					if (multipart) {
						int bufsize = 4096;
						global::haxe.io.Bytes buf = global::haxe.io.Bytes.alloc(bufsize);
						while (( global::haxe.lang.Runtime.compare(((int) (global::haxe.lang.Runtime.getField_f(this.file, "size", 1280549057, true)) ), 0) > 0 )) {
							int size = ( (( global::haxe.lang.Runtime.compare(((int) (global::haxe.lang.Runtime.getField_f(this.file, "size", 1280549057, true)) ), bufsize) > 0 )) ? (bufsize) : (((int) (global::haxe.lang.Runtime.getField_f(this.file, "size", 1280549057, true)) )) );
							int len = 0;
							try {
								len = ((global::haxe.io.Input) (global::haxe.lang.Runtime.getField(this.file, "io", 23526, true)) ).readBytes(buf, 0, size);
							}
							catch (global::System.Exception __temp_catchallException5){
								global::haxe.lang.Exceptions.exception = __temp_catchallException5;
								object __temp_catchall6 = __temp_catchallException5;
								if (( __temp_catchall6 is global::haxe.lang.HaxeException )) {
									__temp_catchall6 = ((global::haxe.lang.HaxeException) (__temp_catchallException5) ).obj;
								}
								
								if (( __temp_catchall6 is global::haxe.io.Eof )) {
									global::haxe.io.Eof e = ((global::haxe.io.Eof) (__temp_catchall6) );
									{
										break;
									}
									
								}
								else {
									throw;
								}
								
							}
							
							
							sock.output.writeFullBytes(buf, 0, len);
							{
								object __temp_dynop1 = this.file;
								global::haxe.lang.Runtime.setField_f(__temp_dynop1, "size", 1280549057, ((double) (( ((int) (global::haxe.lang.Runtime.getField_f(__temp_dynop1, "size", 1280549057, true)) ) - ((int) (len) ) )) ));
							}
							
						}
						
						sock.write("\r\n");
						sock.write("--");
						sock.write(boundary);
						sock.write("--");
					}
					
					this.readHttpResponse(api, sock);
					sock.close();
				}
				catch (global::System.Exception __temp_catchallException3){
					global::haxe.lang.Exceptions.exception = __temp_catchallException3;
					object __temp_catchall4 = __temp_catchallException3;
					if (( __temp_catchall4 is global::haxe.lang.HaxeException )) {
						__temp_catchall4 = ((global::haxe.lang.HaxeException) (__temp_catchallException3) ).obj;
					}
					
					{
						object e1 = __temp_catchall4;
						try {
							sock.close();
						}
						catch (global::System.Exception __temp_catchallException1){
							global::haxe.lang.Exceptions.exception = __temp_catchallException1;
							object __temp_catchall2 = __temp_catchallException1;
							if (( __temp_catchall2 is global::haxe.lang.HaxeException )) {
								__temp_catchall2 = ((global::haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
							}
							
							{
								object e2 = __temp_catchall2;
							}
							
						}
						
						
						this.onError.__hx_invoke1_o(default(double), global::Std.@string(e1));
					}
					
				}
				
				
			}
		}
		
		
		public virtual void readHttpResponse(global::haxe.io.Output api, global::sys.net.Socket sock) {
			unchecked {
				global::haxe.io.BytesBuffer b = new global::haxe.io.BytesBuffer();
				int k = 4;
				global::haxe.io.Bytes s = global::haxe.io.Bytes.alloc(4);
				sock.setTimeout(this.cnxTimeout);
				while (true) {
					int p = sock.input.readBytes(s, 0, k);
					while (( p != k )) {
						p += sock.input.readBytes(s, p, ( k - p ));
					}
					
					{
						if (( ( k < 0 ) || ( k > s.length ) )) {
							throw global::haxe.lang.HaxeException.wrap(global::haxe.io.Error.OutsideBounds);
						}
						
						( b.b as global::System.IO.Stream ).Write(((byte[]) (s.b) ), ((int) (0) ), ((int) (k) ));
					}
					
					switch (k) {
						case 1:
						{
							int c = ((int) (s.b[0]) );
							if (( c == 10 )) {
								goto label1;
							}
							
							if (( c == 13 )) {
								k = 3;
							}
							else {
								k = 4;
							}
							
							break;
						}
						
						
						case 2:
						{
							int c1 = ((int) (s.b[1]) );
							if (( c1 == 10 )) {
								if (( ((int) (s.b[0]) ) == 13 )) {
									goto label1;
								}
								
								k = 4;
							}
							else if (( c1 == 13 )) {
								k = 3;
							}
							else {
								k = 4;
							}
							
							break;
						}
						
						
						case 3:
						{
							int c2 = ((int) (s.b[2]) );
							if (( c2 == 10 )) {
								if (( ((int) (s.b[1]) ) != 13 )) {
									k = 4;
								}
								else if (( ((int) (s.b[0]) ) != 10 )) {
									k = 2;
								}
								else {
									goto label1;
								}
								
							}
							else if (( c2 == 13 )) {
								if (( ( ((int) (s.b[1]) ) != 10 ) || ( ((int) (s.b[0]) ) != 13 ) )) {
									k = 1;
								}
								else {
									k = 3;
								}
								
							}
							else {
								k = 4;
							}
							
							break;
						}
						
						
						case 4:
						{
							int c3 = ((int) (s.b[3]) );
							if (( c3 == 10 )) {
								if (( ((int) (s.b[2]) ) != 13 )) {
									continue;
								}
								else if (( ( ((int) (s.b[1]) ) != 10 ) || ( ((int) (s.b[0]) ) != 13 ) )) {
									k = 2;
								}
								else {
									goto label1;
								}
								
							}
							else if (( c3 == 13 )) {
								if (( ( ((int) (s.b[2]) ) != 10 ) || ( ((int) (s.b[1]) ) != 13 ) )) {
									k = 3;
								}
								else {
									k = 1;
								}
								
							}
							
							break;
						}
						
						
					}
					
				}
				
				label1: {};
				global::Array<object> headers = global::haxe.lang.StringExt.split(b.getBytes().toString(), "\r\n");
				string response = global::haxe.lang.Runtime.toString((headers.shift()).toDynamic());
				global::Array<object> rp = global::haxe.lang.StringExt.split(response, " ");
				global::haxe.lang.Null<int> status = global::Std.parseInt(global::haxe.lang.Runtime.toString(rp[1]));
				if (( global::haxe.lang.Runtime.eq((status).toDynamic(), 0) ||  ! (status.hasValue)  )) {
					throw global::haxe.lang.HaxeException.wrap("Response status error");
				}
				
				headers.pop();
				headers.pop();
				this.responseHeaders = ((global::haxe.ds.StringMap<object>) (new global::haxe.ds.StringMap<object>()) );
				global::haxe.lang.Null<int> size = default(global::haxe.lang.Null<int>);
				bool chunked = false;
				{
					int _g = 0;
					while (( _g < headers.length )) {
						string hline = global::haxe.lang.Runtime.toString(headers[_g]);
						 ++ _g;
						global::Array<object> a = global::haxe.lang.StringExt.split(hline, ": ");
						string hname = global::haxe.lang.Runtime.toString((a.shift()).toDynamic());
						string hval = ( (( a.length == 1 )) ? (global::haxe.lang.Runtime.toString(a[0])) : (a.@join(": ")) );
						hval = hval.TrimEnd().TrimStart();
						((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (((global::haxe.IMap<object, object>) (this.responseHeaders) )) ))) ).@set(hname, hval);
						{
							string _g1 = hname.ToLowerInvariant();
							switch (_g1) {
								case "content-length":
								{
									size = global::Std.parseInt(hval);
									break;
								}
								
								
								case "transfer-encoding":
								{
									chunked = string.Equals(hval.ToLowerInvariant(), "chunked");
									break;
								}
								
								
							}
							
						}
						
					}
					
				}
				
				this.onStatus.__hx_invoke1_o(default(double), (status).toDynamic());
				global::EReg chunk_re = new global::EReg("^([0-9A-Fa-f]+)[ ]*\r\n", "m");
				this.chunk_size = default(global::haxe.lang.Null<int>);
				this.chunk_buf = null;
				int bufsize = 1024;
				global::haxe.io.Bytes buf = global::haxe.io.Bytes.alloc(bufsize);
				if (chunked) {
					try {
						while (true) {
							int len = sock.input.readBytes(buf, 0, bufsize);
							if ( ! (this.readChunk(chunk_re, api, buf, len)) ) {
								break;
							}
							
						}
						
					}
					catch (global::System.Exception __temp_catchallException1){
						global::haxe.lang.Exceptions.exception = __temp_catchallException1;
						object __temp_catchall2 = __temp_catchallException1;
						if (( __temp_catchall2 is global::haxe.lang.HaxeException )) {
							__temp_catchall2 = ((global::haxe.lang.HaxeException) (__temp_catchallException1) ).obj;
						}
						
						if (( __temp_catchall2 is global::haxe.io.Eof )) {
							global::haxe.io.Eof e = ((global::haxe.io.Eof) (__temp_catchall2) );
							{
								throw global::haxe.lang.HaxeException.wrap("Transfer aborted");
							}
							
						}
						else {
							throw;
						}
						
					}
					
					
				}
				else if ( ! (size.hasValue) ) {
					if ( ! (this.noShutdown) ) {
						sock.shutdown(false, true);
					}
					
					try {
						while (true) {
							int len1 = sock.input.readBytes(buf, 0, bufsize);
							api.writeBytes(buf, 0, len1);
						}
						
					}
					catch (global::System.Exception __temp_catchallException3){
						global::haxe.lang.Exceptions.exception = __temp_catchallException3;
						object __temp_catchall4 = __temp_catchallException3;
						if (( __temp_catchall4 is global::haxe.lang.HaxeException )) {
							__temp_catchall4 = ((global::haxe.lang.HaxeException) (__temp_catchallException3) ).obj;
						}
						
						if (( __temp_catchall4 is global::haxe.io.Eof )) {
							global::haxe.io.Eof e1 = ((global::haxe.io.Eof) (__temp_catchall4) );
							{
							}
							
						}
						else {
							throw;
						}
						
					}
					
					
				}
				else {
					api.prepare((size).@value);
					try {
						while (( (size).@value > 0 )) {
							int len2 = sock.input.readBytes(buf, 0, ( (( (size).@value > bufsize )) ? (bufsize) : ((size).@value) ));
							api.writeBytes(buf, 0, len2);
							size = new global::haxe.lang.Null<int>(((int) (( (size).@value - (new global::haxe.lang.Null<int>(len2, true)).@value )) ), true);
						}
						
					}
					catch (global::System.Exception __temp_catchallException5){
						global::haxe.lang.Exceptions.exception = __temp_catchallException5;
						object __temp_catchall6 = __temp_catchallException5;
						if (( __temp_catchall6 is global::haxe.lang.HaxeException )) {
							__temp_catchall6 = ((global::haxe.lang.HaxeException) (__temp_catchallException5) ).obj;
						}
						
						if (( __temp_catchall6 is global::haxe.io.Eof )) {
							global::haxe.io.Eof e2 = ((global::haxe.io.Eof) (__temp_catchall6) );
							{
								throw global::haxe.lang.HaxeException.wrap("Transfer aborted");
							}
							
						}
						else {
							throw;
						}
						
					}
					
					
				}
				
				if (( chunked && (( this.chunk_size.hasValue || ( this.chunk_buf != null ) )) )) {
					throw global::haxe.lang.HaxeException.wrap("Invalid chunk");
				}
				
				if (( ( (status).@value < 200 ) || ( (status).@value >= 400 ) )) {
					throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat("Http Error #", global::haxe.lang.Runtime.toString((status).toDynamic())));
				}
				
				api.close();
			}
		}
		
		
		public virtual bool readChunk(global::EReg chunk_re, global::haxe.io.Output api, global::haxe.io.Bytes buf, int len) {
			unchecked {
				if ( ! (this.chunk_size.hasValue) ) {
					if (( this.chunk_buf != null )) {
						global::haxe.io.BytesBuffer b = new global::haxe.io.BytesBuffer();
						{
							global::haxe.io.Bytes src = this.chunk_buf;
							( b.b as global::System.IO.Stream ).Write(((byte[]) (src.b) ), ((int) (0) ), ((int) (src.length) ));
						}
						
						{
							if (( ( len < 0 ) || ( len > buf.length ) )) {
								throw global::haxe.lang.HaxeException.wrap(global::haxe.io.Error.OutsideBounds);
							}
							
							( b.b as global::System.IO.Stream ).Write(((byte[]) (buf.b) ), ((int) (0) ), ((int) (len) ));
						}
						
						buf = b.getBytes();
						len += this.chunk_buf.length;
						this.chunk_buf = null;
					}
					
					if (chunk_re.match(buf.toString())) {
						object p = chunk_re.matchedPos();
						if (( global::haxe.lang.Runtime.compare(((int) (global::haxe.lang.Runtime.getField_f(p, "len", 5393365, true)) ), len) <= 0 )) {
							string cstr = chunk_re.matched(1);
							this.chunk_size = global::Std.parseInt(global::haxe.lang.Runtime.concat("0x", cstr));
							if (string.Equals(cstr, "0")) {
								this.chunk_size = default(global::haxe.lang.Null<int>);
								this.chunk_buf = null;
								return false;
							}
							
							len = ( ((int) (len) ) - ((int) (global::haxe.lang.Runtime.getField_f(p, "len", 5393365, true)) ) );
							return this.readChunk(chunk_re, api, buf.sub(((int) (global::haxe.lang.Runtime.getField_f(p, "len", 5393365, true)) ), len), len);
						}
						
					}
					
					if (( len > 10 )) {
						this.onError.__hx_invoke1_o(default(double), "Invalid chunk");
						return false;
					}
					
					this.chunk_buf = buf.sub(0, len);
					return true;
				}
				
				if (( (this.chunk_size).@value > len )) {
					global::haxe.Http tmp = this;
					tmp.chunk_size = new global::haxe.lang.Null<int>(( (tmp.chunk_size).@value - len ), true);
					api.writeBytes(buf, 0, len);
					return true;
				}
				
				int end = ( (this.chunk_size).@value + 2 );
				if (( len >= end )) {
					if (( (this.chunk_size).@value > 0 )) {
						api.writeBytes(buf, 0, (this.chunk_size).@value);
					}
					
					len -= end;
					this.chunk_size = default(global::haxe.lang.Null<int>);
					if (( len == 0 )) {
						return true;
					}
					
					return this.readChunk(chunk_re, api, buf.sub(end, len), len);
				}
				
				if (( (this.chunk_size).@value > 0 )) {
					api.writeBytes(buf, 0, (this.chunk_size).@value);
				}
				
				global::haxe.Http tmp1 = this;
				tmp1.chunk_size = new global::haxe.lang.Null<int>(( (tmp1.chunk_size).@value - len ), true);
				return true;
			}
		}
		
		
		public global::haxe.lang.Function onData;
		
		public global::haxe.lang.Function onError;
		
		public global::haxe.lang.Function onStatus;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1136381564:
					{
						this.file = ((object) (@value) );
						return @value;
					}
					
					
					case 1987394228:
					{
						this.cnxTimeout = ((double) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1705565617:
					{
						this.onStatus = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					case 157772329:
					{
						this.onError = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					case 1693277929:
					{
						this.onData = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					case 1836776262:
					{
						this.@params = ((global::List<object>) (global::List<object>.__hx_cast<object>(((global::List) (@value) ))) );
						return @value;
					}
					
					
					case 1661489734:
					{
						this.headers = ((global::List<object>) (global::List<object>.__hx_cast<object>(((global::List) (@value) ))) );
						return @value;
					}
					
					
					case 10663594:
					{
						this.postData = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 1136381564:
					{
						this.file = ((object) (@value) );
						return @value;
					}
					
					
					case 660670753:
					{
						this.chunk_buf = ((global::haxe.io.Bytes) (@value) );
						return @value;
					}
					
					
					case 1488620307:
					{
						this.chunk_size = global::haxe.lang.Null<object>.ofDynamic<int>(@value);
						return @value;
					}
					
					
					case 1137315269:
					{
						this.responseHeaders = ((global::haxe.ds.StringMap<object>) (global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (@value) ))) );
						return @value;
					}
					
					
					case 1987394228:
					{
						this.cnxTimeout = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 1533657591:
					{
						this.noShutdown = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1156121931:
					{
						this.responseData = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 5843823:
					{
						this.url = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1705565617:
					{
						return this.onStatus;
					}
					
					
					case 157772329:
					{
						return this.onError;
					}
					
					
					case 1693277929:
					{
						return this.onData;
					}
					
					
					case 380244791:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "readChunk", 380244791)) );
					}
					
					
					case 1196428959:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "readHttpResponse", 1196428959)) );
					}
					
					
					case 1855145886:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "customRequest", 1855145886)) );
					}
					
					
					case 1149558607:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "request", 1149558607)) );
					}
					
					
					case 1828713895:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setParameter", 1828713895)) );
					}
					
					
					case 1554480847:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setHeader", 1554480847)) );
					}
					
					
					case 1836776262:
					{
						return this.@params;
					}
					
					
					case 1661489734:
					{
						return this.headers;
					}
					
					
					case 10663594:
					{
						return this.postData;
					}
					
					
					case 1136381564:
					{
						return this.file;
					}
					
					
					case 660670753:
					{
						return this.chunk_buf;
					}
					
					
					case 1488620307:
					{
						return (this.chunk_size).toDynamic();
					}
					
					
					case 1137315269:
					{
						return this.responseHeaders;
					}
					
					
					case 1987394228:
					{
						return this.cnxTimeout;
					}
					
					
					case 1533657591:
					{
						return this.noShutdown;
					}
					
					
					case 1156121931:
					{
						return this.responseData;
					}
					
					
					case 5843823:
					{
						return this.url;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1136381564:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.file)) );
					}
					
					
					case 1987394228:
					{
						return this.cnxTimeout;
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 380244791:
					{
						return this.readChunk(((global::EReg) (dynargs[0]) ), ((global::haxe.io.Output) (dynargs[1]) ), ((global::haxe.io.Bytes) (dynargs[2]) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[3])) ));
					}
					
					
					case 1196428959:
					{
						this.readHttpResponse(((global::haxe.io.Output) (dynargs[0]) ), ((global::sys.net.Socket) (dynargs[1]) ));
						break;
					}
					
					
					case 1855145886:
					{
						this.customRequest(global::haxe.lang.Runtime.toBool(dynargs[0]), ((global::haxe.io.Output) (dynargs[1]) ), ((global::sys.net.Socket) (dynargs[2]) ), global::haxe.lang.Runtime.toString(dynargs[3]));
						break;
					}
					
					
					case 1149558607:
					{
						this.request(global::haxe.lang.Null<object>.ofDynamic<bool>(dynargs[0]));
						break;
					}
					
					
					case 1828713895:
					{
						return this.setParameter(global::haxe.lang.Runtime.toString(dynargs[0]), global::haxe.lang.Runtime.toString(dynargs[1]));
					}
					
					
					case 1554480847:
					{
						return this.setHeader(global::haxe.lang.Runtime.toString(dynargs[0]), global::haxe.lang.Runtime.toString(dynargs[1]));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("onStatus");
			baseArr.push("onError");
			baseArr.push("onData");
			baseArr.push("params");
			baseArr.push("headers");
			baseArr.push("postData");
			baseArr.push("file");
			baseArr.push("chunk_buf");
			baseArr.push("chunk_size");
			baseArr.push("responseHeaders");
			baseArr.push("cnxTimeout");
			baseArr.push("noShutdown");
			baseArr.push("responseData");
			baseArr.push("url");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class Http_setHeader_103__Fun : global::haxe.lang.Function {
		
		public Http_setHeader_103__Fun(string header) : base(1, 0) {
			this.header = header;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object h = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return  ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(h, "header", 2097154445, true)), this.header)) ;
		}
		
		
		public string header;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class Http_setParameter_121__Fun : global::haxe.lang.Function {
		
		public Http_setParameter_121__Fun(string param) : base(1, 0) {
			this.param = param;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object p = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return  ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(p, "param", 1029013645, true)), this.param)) ;
		}
		
		
		public string param;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class Http_request_390__Fun : global::haxe.lang.Function {
		
		public Http_request_390__Fun(global::haxe.io.BytesOutput output, global::haxe.lang.Function old, global::haxe.Http me1, bool[] err, global::haxe.Http _gthis) : base(1, 0) {
			this.output = output;
			this.old = old;
			this.me1 = me1;
			this.err = err;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string e = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			this.me1.responseData = this.output.getBytes().toString();
			this.err[0] = true;
			this._gthis.onError = this.old;
			this._gthis.onError.__hx_invoke1_o(default(double), e);
			return null;
		}
		
		
		public global::haxe.io.BytesOutput output;
		
		public global::haxe.lang.Function old;
		
		public global::haxe.Http me1;
		
		public bool[] err;
		
		public global::haxe.Http _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class Http_customRequest_527__Fun : global::haxe.lang.Function {
		
		public Http_customRequest_527__Fun() : base(1, 0) {
		}
		
		
		public static global::haxe.Http_customRequest_527__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object h = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(h, "header", 2097154445, true)), "Content-Type");
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class Http___hx_ctor_haxe_Http_813__Fun : global::haxe.lang.Function {
		
		public Http___hx_ctor_haxe_Http_813__Fun() : base(1, 0) {
		}
		
		
		public static global::haxe.Http___hx_ctor_haxe_Http_813__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			int status = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class Http___hx_ctor_haxe_Http_803__Fun : global::haxe.lang.Function {
		
		public Http___hx_ctor_haxe_Http_803__Fun() : base(1, 0) {
		}
		
		
		public static global::haxe.Http___hx_ctor_haxe_Http_803__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string msg = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class Http___hx_ctor_haxe_Http_793__Fun : global::haxe.lang.Function {
		
		public Http___hx_ctor_haxe_Http_793__Fun() : base(1, 0) {
		}
		
		
		public static global::haxe.Http___hx_ctor_haxe_Http_793__Fun __hx_current;
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			string data = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float1)) : (global::haxe.lang.Runtime.toString(__fn_dyn1)) );
			return null;
		}
		
		
	}
}


