// Generated by Haxe 3.4.7
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Lambda extends haxe.lang.HxObject
{
	public Lambda(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Lambda()
	{
		//line 37 "/usr/share/haxe/std/Lambda.hx"
		haxe.root.Lambda.__hx_ctor__Lambda(this);
	}
	
	
	public static void __hx_ctor__Lambda(haxe.root.Lambda __hx_this)
	{
	}
	
	
	public static <A> boolean exists(java.lang.Object it, haxe.lang.Function f)
	{
		//line 142 "/usr/share/haxe/std/Lambda.hx"
		{
			//line 142 "/usr/share/haxe/std/Lambda.hx"
			java.lang.Object x = ((java.lang.Object) (haxe.lang.Runtime.callField(it, "iterator", null)) );
			//line 142 "/usr/share/haxe/std/Lambda.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(x, "hasNext", null)))
			{
				//line 142 "/usr/share/haxe/std/Lambda.hx"
				A x1 = ((A) (haxe.lang.Runtime.callField(x, "next", null)) );
				//line 143 "/usr/share/haxe/std/Lambda.hx"
				if (haxe.lang.Runtime.toBool(f.__hx_invoke1_o(0.0, x1))) 
				{
					//line 144 "/usr/share/haxe/std/Lambda.hx"
					return true;
				}
				
			}
			
		}
		
		//line 145 "/usr/share/haxe/std/Lambda.hx"
		return false;
	}
	
	
	public static <A> haxe.root.List<A> filter(java.lang.Object it, haxe.lang.Function f)
	{
		//line 186 "/usr/share/haxe/std/Lambda.hx"
		haxe.root.List<A> l = new haxe.root.List<A>();
		//line 187 "/usr/share/haxe/std/Lambda.hx"
		{
			//line 187 "/usr/share/haxe/std/Lambda.hx"
			java.lang.Object x = ((java.lang.Object) (haxe.lang.Runtime.callField(it, "iterator", null)) );
			//line 187 "/usr/share/haxe/std/Lambda.hx"
			while (haxe.lang.Runtime.toBool(haxe.lang.Runtime.callField(x, "hasNext", null)))
			{
				//line 187 "/usr/share/haxe/std/Lambda.hx"
				A x1 = ((A) (haxe.lang.Runtime.callField(x, "next", null)) );
				//line 188 "/usr/share/haxe/std/Lambda.hx"
				if (haxe.lang.Runtime.toBool(f.__hx_invoke1_o(0.0, x1))) 
				{
					//line 189 "/usr/share/haxe/std/Lambda.hx"
					l.add(x1);
				}
				
			}
			
		}
		
		//line 190 "/usr/share/haxe/std/Lambda.hx"
		return l;
	}
	
	
}


