// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_ArrayBufferViewImpl
#include <haxe/io/ArrayBufferViewImpl.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Error
#include <haxe/io/Error.h>
#endif
#ifndef INCLUDED_haxe_io__ArrayBufferView_ArrayBufferView_Impl_
#include <haxe/io/_ArrayBufferView/ArrayBufferView_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_1bda2e749bb87247_88_fromBytes,"haxe.io._ArrayBufferView.ArrayBufferView_Impl_","fromBytes",0xd52b9d62,"haxe.io._ArrayBufferView.ArrayBufferView_Impl_.fromBytes","/usr/share/haxe/std/haxe/io/ArrayBufferView.hx",88,0x41f0467b)
namespace haxe{
namespace io{
namespace _ArrayBufferView{

void ArrayBufferView_Impl__obj::__construct() { }

Dynamic ArrayBufferView_Impl__obj::__CreateEmpty() { return new ArrayBufferView_Impl__obj; }

void *ArrayBufferView_Impl__obj::_hx_vtable = 0;

Dynamic ArrayBufferView_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ArrayBufferView_Impl__obj > _hx_result = new ArrayBufferView_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ArrayBufferView_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x70e5c2cf;
}

 ::haxe::io::ArrayBufferViewImpl ArrayBufferView_Impl__obj::fromBytes( ::haxe::io::Bytes bytes,hx::Null< int >  __o_pos, ::Dynamic length){
int pos = __o_pos.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_1bda2e749bb87247_88_fromBytes)
HXLINE(  89)		if (hx::IsNull( length )) {
HXLINE(  89)			length = (bytes->length - pos);
            		}
HXLINE(  90)		bool _hx_tmp;
HXDLIN(  90)		bool _hx_tmp1;
HXDLIN(  90)		if ((pos >= (int)0)) {
HXLINE(  90)			_hx_tmp1 = hx::IsLess( length,(int)0 );
            		}
            		else {
HXLINE(  90)			_hx_tmp1 = true;
            		}
HXDLIN(  90)		if (!(_hx_tmp1)) {
HXLINE(  90)			_hx_tmp = ((pos + length) > bytes->length);
            		}
            		else {
HXLINE(  90)			_hx_tmp = true;
            		}
HXDLIN(  90)		if (_hx_tmp) {
HXLINE(  90)			HX_STACK_DO_THROW(::haxe::io::Error_obj::OutsideBounds_dyn());
            		}
HXLINE(  91)		return  ::haxe::io::ArrayBufferViewImpl_obj::__alloc( HX_CTX ,bytes,pos,length);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(ArrayBufferView_Impl__obj,fromBytes,return )


ArrayBufferView_Impl__obj::ArrayBufferView_Impl__obj()
{
}

bool ArrayBufferView_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"fromBytes") ) { outValue = fromBytes_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ArrayBufferView_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ArrayBufferView_Impl__obj_sStaticStorageInfo = 0;
#endif

static void ArrayBufferView_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ArrayBufferView_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ArrayBufferView_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ArrayBufferView_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class ArrayBufferView_Impl__obj::__mClass;

static ::String ArrayBufferView_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("fromBytes","\xa1","\xf2","\x20","\x72"),
	::String(null())
};

void ArrayBufferView_Impl__obj::__register()
{
	hx::Object *dummy = new ArrayBufferView_Impl__obj;
	ArrayBufferView_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("haxe.io._ArrayBufferView.ArrayBufferView_Impl_","\xef","\x3f","\x1e","\x38");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ArrayBufferView_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ArrayBufferView_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ArrayBufferView_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ArrayBufferView_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ArrayBufferView_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ArrayBufferView_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ArrayBufferView_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace io
} // end namespace _ArrayBufferView
